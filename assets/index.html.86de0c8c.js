import{e as n}from"./app.c5dbdcb8.js";const s={},a=n('<h1 id="fetching-questions-data" tabindex="-1"><a class="header-anchor" href="#fetching-questions-data" aria-hidden="true">#</a> Fetching Questions &amp; Data</h1><p>In this section, you will be using a script to get and log questions!</p><h2 id="basics" tabindex="-1"><a class="header-anchor" href="#basics" aria-hidden="true">#</a> Basics</h2><p>First off you should learn the basics of how to fetch questions.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//Import easy trivia</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> getQuestions <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;easy-trivia&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">//Get 10 easy questions</span>\n<span class="token keyword">const</span> questions <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getQuestions</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  amount<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n  difficulty<span class="token operator">:</span> <span class="token string">&#39;easy&#39;</span><span class="token punctuation">,</span>\n  type<span class="token operator">:</span> <span class="token string">&#39;multiple&#39;</span><span class="token punctuation">,</span>\n  category<span class="token operator">:</span> <span class="token string">&#39;SCIENCE_COMPUTERS&#39;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">//Log the 10 questions</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>questions<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>Running this script will return random easy questions by using the <code>getQuestions</code> method used above.</p><h2 id="session-tokens" tabindex="-1"><a class="header-anchor" href="#session-tokens" aria-hidden="true">#</a> Session Tokens</h2><p>If you don&#39;t want the same questions you can use a session token to limit questions fetched.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//Imort package</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> Categories<span class="token punctuation">,</span> TriviaSession<span class="token punctuation">,</span> getQuestions <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;easy-trivia&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">//Create a session</span>\n<span class="token keyword">const</span> session <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TriviaSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> sessionToken <span class="token operator">=</span> <span class="token keyword">await</span> session<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">//Get questions</span>\n<span class="token keyword">const</span> batch1 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getQuestions</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  amount<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n  category<span class="token operator">:</span> Categories<span class="token punctuation">.</span><span class="token function">categoryByName</span><span class="token punctuation">(</span><span class="token string">&#39;HISTORY&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  difficulty<span class="token operator">:</span> <span class="token string">&#39;hard&#39;</span><span class="token punctuation">,</span>\n  token<span class="token operator">:</span> sessionToken\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> batch2 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getQuestions</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  amount<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n  category<span class="token operator">:</span> Categories<span class="token punctuation">.</span><span class="token function">categoryByName</span><span class="token punctuation">(</span><span class="token string">&#39;HISTORY&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  difficulty<span class="token operator">:</span> <span class="token string">&#39;hard&#39;</span><span class="token punctuation">,</span>\n  token<span class="token operator">:</span> sessionToken\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">//Log them</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>batch1<span class="token punctuation">,</span> batch2<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">//End the session</span>\nsession<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div>',9);s.render=function(n,s){return a};export{s as default};
